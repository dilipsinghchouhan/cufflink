<script>
$(document).ready( function(root){
  var Lib = root.Lib = (root.Lib || {});

  var cleanUpFieldType = Lib.cleanUpFieldType = function(fieldType, modelType) {
    var newFieldType = "";

    if (["string_1", "string_2", "body"].indexOf(fieldType) !== -1) {
      if (modelType == "experience") {
        switch(fieldType) {
          case "string_1":
            return "area of study";
            break;
          case "string_2":
            return "degree";
            break;
          case "body":
            return "awards & activites";
            break;
        }
      }
    }

    for (i = 0; i < fieldType.length; i++) {
      if (fieldType[i] == "_") {
        newFieldType += " ";
      } else {
        newFieldType += fieldType[i];
      }
    }

    var html = "<i class=\"icon-plus editing\"></i> " + newFieldType

    return [newFieldType, html];
  }

  var notify = Lib.notify = function(
    message, color, destination, method, hide) {
      var $notifications = $('<div class="notifications ' + color + '">');
      $notifications.text(message);

      switch(method) {
        case "before":
          destination.before($notifications);
          break;
        case "after":
          destination.after($notifications);
          break;
        case "prepend":
          destination.prepend($notifications);
          break;
        default:
          destination.append($notifications);
          break;
      }

      if (hide) {
        Lib.delayedRemove($notifications)
      }
  }

  var delayedRemove = Lib.delayedRemove = function(jQueryObj) {
    timeoutID = window.setTimeout(function() {
      jQueryObj.remove();
    }, 1000);
  }

  var cleanUp = Lib.cleanUp = function($field, $clicked_button,
    $other_button, $activeCurrentVal, $property) {
    $field.remove();
    $clicked_button.remove();
    $other_button.remove();
    $activeCurrentVal.removeClass("active");
    $property.removeClass("editing");
  }

  var createField = Lib.createField = function(fieldType, fieldValue) {
    if (["state", "industry", "summary",
      "current", "body"].indexOf(fieldType) === -1) {
        if (["start_date", "end_date", "current"]
          .indexOf(fieldType) === -1) {

            var inputType = "text";
          } else {
            var inputType = "date";
          }

        var html = '<input class="field" type="' + inputType + '" value="';
        html += fieldValue + '">';
    }

    else if (fieldType == "current") {
        var html = '<input class="field" type="checkbox"';

        if (fieldValue == "checked") {
          html += " checked"
        };

        html += ">"
    }

    else if (["summary", "body"].indexOf(fieldType) !== -1) {
    	  var html = '<textarea class="field">';
	      html += fieldValue + '</textarea>';
    }

    else {
	      var html = '<select class="field">';

	      if (fieldType === "state") {
	        var options =
            ["AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DC", "DE", "FL", "GA",
              "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD",
              "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ",
              "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC",
              "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"]

		      html += '<option>Select a State</option>';
	      } else {
    		  var options = [
    		        "Real Estate",
    		        "Technology",
    		        "Advertising",
    		        "Hospitality",
    		        "Health/Medicine",
    		        "Banana Stand",
    		        "Other"
    		      ];

		      html += '<option>Select an Industry</option>';
	      }

        options.forEach( function(option) {
          html += '<option value="' + option + '"';

    		  if (fieldValue == option) {
    			  html += " selected";
    		  }

          html += '>' + option + '</option>';
        });
      }

    return html;
  }

  var getDest = Lib.getDest = function(type) {
    return $("#profile-" + type + " ul");
  }

  var afterCreation = Lib.afterCreation = function(
    event, data, noParent, modal) {

    var $form = $(event.target);

    var type = $form.attr("id");
    var $html = data;

    $("#profile-" + type + " > .notifications").hide();

    if (noParent) {
      $form.hide();
    } else {
      $form.parent().hide();
    }

    if (modal) $(".backdrop").hide();

    $("#add-" + type).parent().show();

    console.log(Lib.getDest(type))

    Lib.getDest(type).prepend($html);


    Lib.notify(type + " created successfully!", "green",
      Lib.getDest(type), "before", true);
  }
});
</script>
