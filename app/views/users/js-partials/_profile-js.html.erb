<script>
$(document).ready( function(){

  function delayedRemove(jQueryObj) {
    timeoutID = window.setTimeout(function() {
      jQueryObj.remove();
    }, 1000);
  }

  function cleanUp($field, $clicked_button, $other_button, $activeCurrentVal,
    $target, $notifications) {
    $field.remove();
    $clicked_button.remove();
    $other_button.remove();
    $activeCurrentVal.removeClass("active");
    $target.closest('.property').removeClass("editing");
    $notifications.addClass("green");
    delayedRemove($notifications);
  }

  function genUrl(modelType, urlId) {
    if (modelType == "company") {
      var plural = "companies"
    } else {
      var plural = modelType + "s"
    }
    return "/" + plural + "/" + urlId;
  }

  var urlId = $('h1').attr('data-id');

  $("#edit-profile-body").on("click", ".current-value", function(event) {
    var $target = $(event.target);
    var $activeCurrentVal = $target.closest('.current-value')
    $activeCurrentVal.addClass("active");

    var $property = $target.closest('.property')

    var notifications = '<div class="notifications"></div>'
    $property.prepend(notifications);

    var fieldArray = $activeCurrentVal.attr('data-field').split("-");
    var modelType = fieldArray[0]
    var fieldType = fieldArray[1];

    var buttons = '<button class="save">Save</button>';

    if ((fieldType !== "current_student") &&
      (!(fieldType == "industry" && modelType == "company"))) {
        buttons += '<button class="remove">Remove</button>';
    }

    $property.append(buttons);

    // var fieldValue = ""
    //
    // if (!($target.attr("data-nil"))
    // can this area be cleaned up?

    if ($target.attr("data-nil") === "true") {
    	var fieldValue = "";
    } else if (fieldType == "current_student") {
      if ($target[0].checked) {
        var fieldValue = "checked";
      } else {
        var fieldValue = "";
      }
    } else {
    	var fieldValue = $target.text().trim();
    }

    var fieldHTML = createField(fieldType, fieldValue);

    $activeCurrentVal.after(fieldHTML);
    $property.addClass("editing");
  });

  $("#edit-profile-body").on("click", "button", function(event) {
    var $target = $(event.target);

    var $activeCurrentVal = $target
      .siblings().filter('.current-value.active');

    var fieldArray = $activeCurrentVal.attr('data-field').split("-");

    var modelType = fieldArray[0];
    var fieldType = fieldArray[1];

    var $field = $target.siblings().filter('.field');
    var $notifications = $target.siblings().filter('.notifications');

    var $other_button = $target.siblings().filter('button');
    var $clicked_button = $(this);

    var obj = {};

    var $containingDiv = $target.closest(".profile-data")

    if (["user", "company"].indexOf(modelType) == -1) {
      urlId = $containingDiv.attr("id");
    }

    var url = genUrl(modelType, urlId);

    if ($target.hasClass('save')) {

      var fieldNameAsHash = modelType + "[" + fieldType + "]";

      var fieldVal = $field.val();

      if ($field.attr("type") == "checkbox") {
        fieldVal = $field[0].checked
      }

      obj[fieldNameAsHash] = fieldVal;

      $.ajax({
        url: url,
        type: "PUT",
        data: obj,
        success: function() {
          if ($field.attr("type") !== "checkbox") {
            $activeCurrentVal.text(fieldVal);
          }

		      $activeCurrentVal.attr("data-nil", "false");
          $notifications.text(fieldType + " updated successfully!");
          cleanUp($field, $clicked_button, $other_button, $activeCurrentVal,
            $target, $notifications);
        },
        error: function(jqXHR) {
  	  	  if ($activeCurrentVal.attr("data-nil") === "true") {
  	  	  	var fieldValue = "";
  	  	  } else {
  	  	  	var fieldValue = $target.text().trim();
  	  	  }

		      $field.val(fieldValue);

		      $notifications.text(jqXHR.responseText);
          $notifications.addClass("red");
          delayedRemove($notifications);
        }
      });

  } else if ($target.hasClass('remove')) {
	  obj[modelType + "[null]"] = fieldType;

      $.ajax({
        url: url,
        type: "PUT",
        data: obj,
        success: function() {
		      $activeCurrentVal.attr("data-nil", "true");
		      $activeCurrentVal.text("(enter " + fieldType + ")");
          $notifications.text(fieldType + " removed successfully!");
          cleanUp($field, $clicked_button, $other_button, $activeCurrentVal,
            $target, $notifications);
        }
      });
  }
  });

  function createField(fieldType, fieldValue) {
    if (["state", "industry", "summary",
      "current_student", "awards"].indexOf(fieldType) === -1) {
        if (["start_date", "end_date", "current_student"]
          .indexOf(fieldType) === -1) {

            var inputType = "text";
          } else {
            var inputType = "date";
          }

        var html = '<input class="field" type="' + inputType + '" value="';
        html += fieldValue + '">';
    }

    else if (fieldType == "current_student") {
        var html = '<input class="field" type="checkbox"';

        if (fieldValue == "checked") {
          html += " checked"
        };

        html += ">"
    }

    else if (["summary", "awards"].indexOf(fieldType) !== -1) {
    	  var html = '<textarea class="field">';
	      html += fieldValue + '</textarea>';
    }

    else {
	      var html = '<select class="field">';

	      if (fieldType === "state") {
	        var options = ["NY", "CA"];

		      html += '<option>Select a State</option>';
	      } else {
    		  var options = [
    		        "Real Estate",
    		        "Technology",
    		        "Advertising",
    		        "Hospitality",
    		        "Health/Medicine",
    		        "Banana Stand",
    		        "Other"
    		      ];

		      html += '<option>Select an Industry</option>';
	      }

        options.forEach( function(option) {
          html += '<option value="' + option + '"';

    		  if (fieldValue == option) {
    			  html += " selected";
    		  }

          html += '>' + option + '</option>';
        });
      }

    return html;
  }

  $('#education-link').on("click", function(event) {
  	event.preventDefault();

    $(this).hide();

  	var html = '<form id="education-form">'

    html += "<label>School name <i>(Required)</i>:<br>"
  	html += '<input type="text" name="education[school]"><br>'

  	html += '</label><label>City:<br>'
  	html += '<input type="text" name="education[city]"><br>'

  	html += '</label><label>State:<br>'
  	html += '<input type="text" name="education[state]"><br>'

    html += '</label><label>Start Date:<br>'
    html += '<input type="date" name="education[start_date]"><br>'

    html += '</label><label>Current Student '
    html += '<input type="checkbox" name="education[current_student]"><br>'

    html += '</label><label>End Date:<br>'
    html += '<input type="date" name="education[end_date]"><br>'

    html += '</label><label>Area of Study:<br>'
    html += '<input type="text" name="education[area]"><br>'

    html += '</label><label>Degree:<br>'
    html += '<input type="text" name="education[degree]"><br>'

    html += '</label><label>Awards & Activites<br>'
    html += '<textarea name="education[awards]"></textarea><br>'

    html += '</label><input type="submit" value="Add Education"></form>'

    var $target = $(event.target);
    $target.after(html);

    $('#education-form').on("submit", function(event) {
      event.preventDefault();

      var $form = $(event.currentTarget);
      var formData = $form.serializeJSON();


      $.ajax({
        url: '/users/' + userId + '/educations',
        type: 'POST',
        data: formData,
        success: function(obj) {
          $('#education-link').show();
        },
        error: function() {
          console.log("error")
        }

      });

      $form.remove();
    });

  });

  $(".delete-education-link").on("click", function(event) {
    console.log("delete button clicked")
  })

});
</script>